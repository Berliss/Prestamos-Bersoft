package Gui;

import BaseDeDatos.Bd;
import Pojos.Cliente;
import Pojos.Cobrador;
import Pojos.ConfiguracionPrestamos;
import Pojos.Prestamo;
import Pojos.Recibo;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author berli
 *
 */
public class ModuloPrestamos extends javax.swing.JDialog {
    
    private DefaultTableModel modeloPrestamos = new DefaultTableModel();
    private DefaultTableModel modeloClientes = new DefaultTableModel();
    private DefaultTableModel modeloCuotas = new DefaultTableModel();
    
    private List<JTextField> lista;
    
    private Cobrador cobradorSeleccionado;
    private Cliente clienteSeleccionado;
    private ConfiguracionPrestamos conf;
    
    private boolean habilitarListenerDeFocus = true;
    int numeroDeUltimaSemanaQueSeCobro;
    
    private boolean buscoUnPrestamoActivo = false;
    
    public ModuloPrestamos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        formatoTabla();
        eventoAlSeleccionarUnEmpleado();
        lista = ListaDeTxt();
        jTabbedPane1.remove(3);
        jTabbedPane1.remove(2);
        jTabbedPane1.remove(1);
        txtCobrador.grabFocus();
        configuracionDateChoosers(new Date());
        metodosGenerales.personalizarToolTips(Color.WHITE, Color.RED);
        tablaClientes.getTableHeader().setFont(new java.awt.Font("Century Gothic", 0, 13));
        tablaCuotas.getTableHeader().setFont(new java.awt.Font("Century Gothic", 0, 13));
        tablaPrestamos.getTableHeader().setFont(new java.awt.Font("Century Gothic", 0, 13));
        
        metodosGenerales.unCampoDeTextoMayuscula(txtBuscadorClientes);
        metodosGenerales.unCampoDeTextoMayuscula(txtBuscadorPrestamos);
        
        jCheckBox1.setVisible(false); // Se quito de la vista debido a que esto fue una funcionalidad especifica para darlin.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        txtCobrador = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        etiquetaDeCobrador = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtConf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCompania = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCuotas = new javax.swing.JTextField();
        comboModalidad = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        txtAdelantos = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaCuotas = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer renderer, int row, int columnindex) {

                Component component = super.prepareRenderer(renderer, row, columnindex);
                component.setBackground(Color.white);
                component.setForeground(Color.black);

                if (row <= numeroDeUltimaSemanaQueSeCobro) {
                    //  component.setBackground(new Color(102,102,255));
                    component.setForeground(Color.BLUE);
                }

                return component;

            }
        };
        btnAdelantos = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        btnBuscarClientes = new javax.swing.JButton();
        fechaInicial = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtCobradorSeleccionado = new javax.swing.JTextField();
        txtZonaSeleccionada = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        txtBuscadorPrestamos = new javax.swing.JTextField();
        fecha2 = new com.toedter.calendar.JDateChooser();
        fecha1 = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaPrestamos = new javax.swing.JTable(){

            public String getToolTipText(MouseEvent e) {

                String tip = null;

                if(jComboBox1.getSelectedItem().toString().equals("E")){

                    java.awt.Point p = e.getPoint();
                    int rowIndex = rowAtPoint(p);
                    int colIndex = columnAtPoint(p);
                    //Prestamo pre = (Prestamo) getValueAt(rowIndex, 0);
                    int realColumnIndex = convertColumnIndexToModel(colIndex);

                    if (realColumnIndex == 0) { //Sport column
                        if(getValueAt(rowIndex, 0)instanceof Prestamo){
                            tip = "Eliminado Por : "+((Prestamo) getValueAt(rowIndex, 0)).getDatosDeUltimaModificacion();
                        }else{
                            tip ="Devuelve a su posicion original la columna \"id\".";
                        }

                    }

                }
                return tip;
            }

        };
        lblRegistro = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        txtDir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTel1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTel2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtOcup = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRec = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtBuscadorClientes = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modulo de Prestamos");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        txtCobrador.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtCobrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCobradorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCobradorKeyTyped(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(0, 24, 171));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bolsas-de-dinero (1).png"))); // NOI18N
        jLabel13.setOpaque(true);

        btnAceptar.setBackground(new java.awt.Color(255, 255, 255));
        btnAceptar.setFont(new java.awt.Font("Century Gothic", 0, 48)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(0, 24, 171));
        btnAceptar.setText("Acceder");
        btnAceptar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 24, 171), 3, true));
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setOpaque(true);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel7.setText("Cobrador");

        etiquetaDeCobrador.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        etiquetaDeCobrador.setText("  ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txtCobrador, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(etiquetaDeCobrador, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCobrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaDeCobrador))
                .addGap(119, 119, 119)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Inicio", jPanel8);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configuracion De Prestamos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 13))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel1.setText("Configuracion");

        txtConf.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtConf.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel2.setText("Compania");

        txtCompania.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtCompania.setFocusable(false);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel3.setText("Cuotas");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel4.setText("Modalidad");

        txtCuotas.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtCuotas.setFocusable(false);

        comboModalidad.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        comboModalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semanal", "Diario" }));
        comboModalidad.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(0, 82, Short.MAX_VALUE))
                            .addComponent(comboModalidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(txtCompania)
                    .addComponent(txtConf, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCompania, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cuotas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 13))); // NOI18N

        txtAdelantos.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtAdelantos.setFocusable(false);
        txtAdelantos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAdelantosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAdelantosKeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("Adelantar");

        jScrollPane5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tablaCuotas.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        tablaCuotas.setForeground(new java.awt.Color(51, 51, 51));
        tablaCuotas.setModel(modeloCuotas);
        tablaCuotas.setFocusable(false);
        tablaCuotas.setGridColor(new java.awt.Color(255, 255, 255));
        tablaCuotas.setRowHeight(20);
        tablaCuotas.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tablaCuotas.getTableHeader().setReorderingAllowed(false);
        tablaCuotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCuotasMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaCuotas);

        btnAdelantos.setBackground(new java.awt.Color(0, 24, 171));
        btnAdelantos.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnAdelantos.setForeground(new java.awt.Color(255, 255, 255));
        btnAdelantos.setText("Aplicar");
        btnAdelantos.setContentAreaFilled(false);
        btnAdelantos.setEnabled(false);
        btnAdelantos.setOpaque(true);
        btnAdelantos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdelantosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAdelantos, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdelantos)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdelantos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(btnAdelantos))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prestamo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 13))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel8.setText("Codigo");

        txtCodigo.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtCodigo.setText("Cod");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel6.setText("Nombre");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel9.setText("Apellido");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel10.setText("Cedula");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel11.setText("Fecha");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel12.setText("Monto");

        txtMonto.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtMonto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMontoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMontoFocusLost(evt);
            }
        });
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoKeyTyped(evt);
            }
        });

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txtApellido.setEditable(false);
        txtApellido.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txtCedula.setEditable(false);
        txtCedula.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        btnBuscarClientes.setBackground(new java.awt.Color(0, 24, 171));
        btnBuscarClientes.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnBuscarClientes.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarClientes.setText("Clientes");
        btnBuscarClientes.setContentAreaFilled(false);
        btnBuscarClientes.setOpaque(true);
        btnBuscarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClientesActionPerformed(evt);
            }
        });

        fechaInicial.setDateFormatString("dd/MM/yyyy");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevo.setBackground(new java.awt.Color(0, 24, 171));
        btnNuevo.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setOpaque(true);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel7.add(btnNuevo);

        btnGuardar.setBackground(new java.awt.Color(0, 24, 171));
        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setOpaque(true);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel7.add(btnGuardar);

        btnEditar.setBackground(new java.awt.Color(0, 24, 171));
        btnEditar.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Eliminar");
        btnEditar.setContentAreaFilled(false);
        btnEditar.setEnabled(false);
        btnEditar.setOpaque(true);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel7.add(btnEditar);

        btnCancelar.setBackground(new java.awt.Color(0, 24, 171));
        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setOpaque(true);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel7.add(btnCancelar);

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel24.setText("Zona");

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel25.setText("Cobrador");

        txtCobradorSeleccionado.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtCobradorSeleccionado.setEnabled(false);
        txtCobradorSeleccionado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCobradorSeleccionadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCobradorSeleccionadoFocusLost(evt);
            }
        });
        txtCobradorSeleccionado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCobradorSeleccionadoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCobradorSeleccionadoKeyTyped(evt);
            }
        });

        txtZonaSeleccionada.setEnabled(false);

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jCheckBox1.setText("13 Semanas");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addComponent(txtApellido)
                    .addComponent(txtCedula)
                    .addComponent(txtNombre)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBuscarClientes, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMonto, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCobradorSeleccionado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtZonaSeleccionada)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel24))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnBuscarClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(10, 10, 10)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCobradorSeleccionado)
                    .addComponent(txtZonaSeleccionada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtCodigo.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Prestamos", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        txtBuscadorPrestamos.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtBuscadorPrestamos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorPrestamosKeyReleased(evt);
            }
        });

        fecha2.setDateFormatString("dd/MM/yyyy");

        fecha1.setDateFormatString("dd/MM/yyyy");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel18.setText("Desde");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel19.setText("Hasta");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel20.setText("Buscar");

        jComboBox1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "E" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel23.setText("Estado");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBuscadorPrestamos)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 350, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscadorPrestamos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaPrestamos.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        tablaPrestamos.setForeground(new java.awt.Color(51, 51, 51));
        tablaPrestamos.setModel(modeloPrestamos);
        tablaPrestamos.setGridColor(new java.awt.Color(255, 255, 255));
        tablaPrestamos.setRowHeight(20);
        tablaPrestamos.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tablaPrestamos.setShowVerticalLines(false);
        tablaPrestamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPrestamosMouseClicked(evt);
            }
        });
        tablaPrestamos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaPrestamosKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablaPrestamos);

        lblRegistro.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        lblRegistro.setText("Registros : 0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblRegistro)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegistro)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Buscar Prestamos", jPanel3);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtDir.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtDir.setFocusable(false);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel5.setText("Direccion");

        txtTel1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtTel1.setFocusable(false);

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel14.setText("Telefono 1");

        txtTel2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtTel2.setFocusable(false);

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel15.setText("Telefono 2");

        txtOcup.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtOcup.setFocusable(false);

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel16.setText("Ocupacion");

        txtRec.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtRec.setFocusable(false);

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel17.setText("Recomendado");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDir)
                    .addComponent(jLabel5)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(txtTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOcup)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(txtRec, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOcup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        txtBuscadorClientes.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtBuscadorClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorClientesKeyReleased(evt);
            }
        });

        tablaClientes.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        tablaClientes.setForeground(new java.awt.Color(51, 51, 51));
        tablaClientes.setModel(modeloClientes);
        tablaClientes.setGridColor(new java.awt.Color(255, 255, 255));
        tablaClientes.setRowHeight(20);
        tablaClientes.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        tablaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel21.setText("Buscar");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBuscadorClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscadorClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Buscar Clientes", jPanel10);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCobradorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCobradorKeyReleased
        buscarCobradorPorCodigo();
    }//GEN-LAST:event_txtCobradorKeyReleased

    private void txtCobradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCobradorKeyTyped
        metodosGenerales.limitarCaracteres(evt, txtCobrador, 3);
    }//GEN-LAST:event_txtCobradorKeyTyped

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        funcionalidadBotonAceptar();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnBuscarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClientesActionPerformed
        jTabbedPane1.add(jPanel10, "Buscar Clientes");
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_btnBuscarClientesActionPerformed

    private void txtBuscadorClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorClientesKeyReleased
        buscarClientesPorCriterio(txtBuscadorClientes.getText());
    }//GEN-LAST:event_txtBuscadorClientesKeyReleased

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        if (evt.getClickCount() == 2) {
            rellenarCamposClientes();
        }
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void tablaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaClientesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && tablaClientes.getSelectedRow() > -1) {
            rellenarCamposClientes();
        }
    }//GEN-LAST:event_tablaClientesKeyPressed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        funcionalidadDeBotonNuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        funcionalidadDeBotonCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        funcioalidadBotonEliminar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        funcionalidadDeBotonGuardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtMontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMontoFocusLost
        if (!txtMonto.getText().isEmpty()) {
            NumberFormat format = NumberFormat.getCurrencyInstance(Locale.CANADA);
            txtMonto.setText(format.format(Double.parseDouble(txtMonto.getText())));
            format = null;
        }
    }//GEN-LAST:event_txtMontoFocusLost

    private void txtMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyTyped
        metodosGenerales.formatoNumericoTextField(evt, txtMonto, 7);
    }//GEN-LAST:event_txtMontoKeyTyped

    private void txtMontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMontoFocusGained
        if (!txtMonto.getText().isEmpty()) {
            txtMonto.setText("" + (int) Double.parseDouble(metodosGenerales.quitarFormatoDeMoneda(txtMonto.getText())));
        }
    }//GEN-LAST:event_txtMontoFocusGained

    private void txtBuscadorPrestamosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorPrestamosKeyReleased
        String estadoSeleccionado = jComboBox1.getSelectedItem().toString();
        buscarPrestamosPorCriterio(txtBuscadorPrestamos.getText(), cobradorSeleccionado.getIdCobrador(), fecha1.getDate(), fecha2.getDate(), estadoSeleccionado);
        if (estadoSeleccionado.equals("A")) {
            buscoUnPrestamoActivo = true;
            tablaPrestamos.setSelectionBackground(new java.awt.Color(102, 102, 255));
            tablaPrestamos.setForeground(Color.black);
        } else {
            buscoUnPrestamoActivo = false;
            tablaPrestamos.setSelectionBackground(Color.RED);
            tablaPrestamos.setForeground(Color.RED);
        }
    }//GEN-LAST:event_txtBuscadorPrestamosKeyReleased

    private void tablaPrestamosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPrestamosMouseClicked
        if (evt.getClickCount() == 2 && buscoUnPrestamoActivo) {
            rellenarCamposPrestamos();
        }
    }//GEN-LAST:event_tablaPrestamosMouseClicked

    private void tablaPrestamosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPrestamosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && buscoUnPrestamoActivo && tablaPrestamos.getSelectedRow() > -1) {
            rellenarCamposPrestamos();
        }
    }//GEN-LAST:event_tablaPrestamosKeyPressed

    private void tablaCuotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCuotasMouseClicked
        Point p = evt.getPoint();
        int fila = tablaCuotas.rowAtPoint(p);
        int columna = tablaCuotas.columnAtPoint(p);
        
        System.out.println("Fila " + fila + " Columna " + columna);
    }//GEN-LAST:event_tablaCuotasMouseClicked

    private void btnAdelantosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdelantosActionPerformed
        aplicarAdelantos();
    }//GEN-LAST:event_btnAdelantosActionPerformed

    private void txtAdelantosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdelantosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            seleccionarLosAdelantosConTxt(txtAdelantos);
        }
    }//GEN-LAST:event_txtAdelantosKeyPressed

    private void txtAdelantosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdelantosKeyTyped
        metodosGenerales.formatoNumericoTextField(evt, txtAdelantos, 4);
    }//GEN-LAST:event_txtAdelantosKeyTyped

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        txtBuscadorPrestamos.grabFocus();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnGuardar.grabFocus();
        }
    }//GEN-LAST:event_txtMontoKeyPressed

    private void txtCobradorSeleccionadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCobradorSeleccionadoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCobradorSeleccionadoFocusGained

    private void txtCobradorSeleccionadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCobradorSeleccionadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCobradorSeleccionadoFocusLost

    private void txtCobradorSeleccionadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCobradorSeleccionadoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCobradorSeleccionadoKeyPressed

    private void txtCobradorSeleccionadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCobradorSeleccionadoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCobradorSeleccionadoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModuloPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModuloPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModuloPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModuloPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModuloPrestamos dialog = new ModuloPrestamos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAdelantos;
    private javax.swing.JButton btnBuscarClientes;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> comboModalidad;
    private javax.swing.JLabel etiquetaDeCobrador;
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha2;
    private com.toedter.calendar.JDateChooser fechaInicial;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblRegistro;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTable tablaCuotas;
    private javax.swing.JTable tablaPrestamos;
    private javax.swing.JTextField txtAdelantos;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscadorClientes;
    private javax.swing.JTextField txtBuscadorPrestamos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCobrador;
    private javax.swing.JTextField txtCobradorSeleccionado;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCompania;
    private javax.swing.JTextField txtConf;
    private javax.swing.JTextField txtCuotas;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtOcup;
    private javax.swing.JTextField txtRec;
    private javax.swing.JTextField txtTel1;
    private javax.swing.JTextField txtTel2;
    private javax.swing.JTextField txtZonaSeleccionada;
    // End of variables declaration//GEN-END:variables

    private List<JTextField> ListaDeTxt() {
        return Arrays.asList(new JTextField[]{txtNombre, txtApellido, txtCedula, txtMonto});
    }
    
    private void habilitarCampos(boolean valor) {
        btnBuscarClientes.setEnabled(valor);
        txtMonto.setFocusable(valor);
        btnGuardar.setEnabled(valor);
        btnEditar.setEnabled(!valor);
        txtAdelantos.setFocusable(!valor);
        btnAdelantos.setEnabled(!valor);
    }
    
    private void formatoTabla() {
        tablaClientes.setDefaultEditor(Object.class, null);
        String[] titulos = {"Id", "Nombre", "Apellido", "Cedula"};
        int[] tamanos = {25, 100, 200, 100};
        metodosGenerales.FormatoTablas(tablaClientes, modeloClientes, titulos, tamanos);
        
        tablaPrestamos.setDefaultEditor(Object.class, null);
        String[] titulos2 = {"Id Prestamo", "Id Cliente", "Fecha inicio", "Nombre", "Apellido", "Monto"};
        int[] tamanos2 = {100, 100, 100, 100, 100, 100};
        metodosGenerales.FormatoTablas(tablaPrestamos, modeloPrestamos, titulos2, tamanos2);
        
        tablaCuotas.setDefaultEditor(Object.class, null);
        String[] titulos3 = {"Fecha", "#", "Cuota", "Ad"};
        int[] tamanos3 = {150, 50, 75, 25};
        metodosGenerales.FormatoTablas(tablaCuotas, modeloCuotas, titulos3, tamanos3);
        metodosGenerales.anadirCheckBoxATabla(3, tablaCuotas);
        
        titulos = null;
        tamanos = null;
        titulos2 = null;
        tamanos2 = null;
        titulos3 = null;
        tamanos3 = null;
    }
    
    private void funcionalidadDeBotonNuevo() {
        metodosGenerales.borrarTxt(lista);
        txtAdelantos.setText("");
        metodosGenerales.LimpiarTabla(modeloCuotas);
        fechaInicial.setDate(new Date());
        habilitarCampos(true);
        btnBuscarClientes.grabFocus();
    }
    
    private void funcionalidadDeBotonGuardar() {
        
        boolean hayCampoVacio = metodosGenerales.hayUnCampoVacio(lista);
        
        if (!hayCampoVacio) {
            
            int tipoDePrestamo = comboModalidad.getSelectedIndex(); // 0 = semanal , 1 = diario;
            double monto = Double.parseDouble(metodosGenerales.quitarFormatoDeMoneda(txtMonto.getText()));
            int idCobrador = cobradorSeleccionado.getIdCobrador();
            int idUsuario = ModuloPrincipal.usuario.getIdUsuario();
            int numeroDeCuotas = Integer.parseInt(txtCuotas.getText());
            int porciento = conf.getPorCientoBeneficio();
            
            Bd.insertarPrestamos(new Prestamo(
                    1, fechaInicial.getDate(), null,
                    "A", monto, idCobrador,
                    clienteSeleccionado, idUsuario, null),
                    ((jCheckBox1.isSelected()) ? numeroDeCuotas + 3 : numeroDeCuotas), porciento,
                    tipoDePrestamo);
//el checkbox es para hacer prestamos a 13 semanass

            if (jCheckBox1.isSelected()) {
                JOptionPane.showMessageDialog(this, "Este prestamo sera guardado a 13 semanas , en caso de ser un error , eliminalo.");
                jCheckBox1.setSelected(false);
            }
            
            metodosGenerales.borrarTxt(lista);
            //fechaInicial.setDate(new Date()); Desabilite esta parte para que el cliente pueda poner la fecha que quiera
            btnEditar.setEnabled(false);
            btnBuscarClientes.grabFocus();
        }
        
        if (habilitarListenerDeFocus == true) {
            metodosGenerales.focusPerdidoTxt(lista);
            habilitarListenerDeFocus = false;
        }
        
    }
    
    private void funcioalidadBotonEliminar() {
        int opcion = JOptionPane.showConfirmDialog(this, "Estas seguro de eliminar este prestamo?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (opcion == 0) {
            int idPrestamo = Integer.parseInt(txtCodigo.getText());
            int idUsuario = ModuloPrincipal.usuario.getIdUsuario();
            Bd.eliminarPrestamos(idPrestamo, idUsuario);
            funcionalidadDeBotonNuevo();//para que escribir todo de nuevo si ya hay una funcionalidad para esto
        }
    }
    
    private void funcionalidadDeBotonCancelar() {
        if (metodosGenerales.hayAlmenosUnCampoLleno(lista)) {
            // estoy pensando en cambiar esto por la funcionalidadDeNuevo al final es lo mismo.
            metodosGenerales.borrarTxt(lista);
            txtAdelantos.setText("");
            metodosGenerales.LimpiarTabla(modeloCuotas);
            fechaInicial.setDate(new Date());
            habilitarCampos(true);
        } else {
            dispose();
        }
    }
    
    private void funcionalidadBotonAceptar() {
        conf = ModuloPrincipal.conf;//inicializo esto aqui para no hacer carga al constructor de inicio

        if (cobradorSeleccionado != null) {
            
            jTabbedPane1.add(jPanel2, "Prestamos");
            jTabbedPane1.add(jPanel3, "Buscar Prestamos");
            jTabbedPane1.remove(0);
            
            txtCobradorSeleccionado.setText(cobradorSeleccionado.getNombre());
            txtZonaSeleccionada.setText(cobradorSeleccionado.getZona().getNombre());
            
            txtConf.setText(conf.getNombreConfiguracion());
            txtCompania.setText(conf.getNombreCompania());
            txtCuotas.setText("" + conf.getNumeroDeCuotas());
            comboModalidad.setSelectedItem(conf.getModalida());
            
        }
    }
    
    private void buscarCobradorPorCodigo() {
        String criterio = txtCobrador.getText();
        int configuracion = ModuloPrincipal.conf.getIdConf();
        int tamanoDeCriterio = criterio.length();
        
        switch (tamanoDeCriterio) {
            
            case 3:
                
                List<Cobrador> lista = Bd.buscarCobradorDeTuConfiguracion(criterio, configuracion);
                if (!lista.isEmpty()) {
                    cobradorSeleccionado = lista.get(0);
                    etiquetaDeCobrador.setText(cobradorSeleccionado.getNombre());
                    btnAceptar.grabFocus();
                } else {
                    etiquetaDeCobrador.setText("No existe.");
                    cobradorSeleccionado = null;
                }
                lista = null;
                
                break;
            
            default:
                etiquetaDeCobrador.setText("");
                cobradorSeleccionado = null;
                break;
        }
    }
    
    private void buscarClientesPorCriterio(String criterio) {
        metodosGenerales.LimpiarTabla(modeloClientes);
        List<Cliente> lista = Bd.buscarClienteDependiendoLaZona(criterio, cobradorSeleccionado.getZona().getIdZona());
        modeloClientes.setRowCount(lista.size());
        Cliente c;
        
        for (int i = 0; i < lista.size(); i++) {
            c = lista.get(i);
            modeloClientes.setValueAt(c.getIdCliente(), i, 0);
            modeloClientes.setValueAt(c, i, 1);
            modeloClientes.setValueAt(c.getApellido(), i, 2);
            modeloClientes.setValueAt(c.getCedula(), i, 3);
            
        }
        lista = null;
        c = null;
    }
    
    private void buscarPrestamosPorCriterio(String criterio, int idCobrador, Date fecha1, Date fecha2, String estado) {
        
        if (fecha1 != null && fecha2 != null) {
            
            metodosGenerales.LimpiarTabla(modeloPrestamos);
            List<Prestamo> lista = Bd.buscarPrestamoPorCriterio(criterio, idCobrador, fecha1.getTime(), fecha2.getTime(), estado);
            int numeroDeRegistros = lista.size();
            
            modeloPrestamos.setRowCount(numeroDeRegistros);
            lblRegistro.setText("Registros : " + numeroDeRegistros);
            
            Prestamo p;
            
            for (int i = 0; i < lista.size(); i++) {
                p = lista.get(i);
                modeloPrestamos.setValueAt(p, i, 0);
                modeloPrestamos.setValueAt(p.getCliente().getIdCliente(), i, 1);
                modeloPrestamos.setValueAt(p.getFechaInicialFormateada(), i, 2);
                modeloPrestamos.setValueAt(p.getCliente(), i, 3);
                modeloPrestamos.setValueAt(p.getCliente().getApellido(), i, 4);
                modeloPrestamos.setValueAt(p.getMontoFormateado(), i, 5);
            }
            
            lista = null;
            p = null;
            
        } else {
            System.out.println("Fecha Invalida");
        }
        
    }
    
    public void rellenarCamposClientes() {
        
        int filaSeleccionada = tablaClientes.getSelectedRow();
        clienteSeleccionado = (Cliente) tablaClientes.getValueAt(filaSeleccionada, 1);
        
        txtNombre.setText(clienteSeleccionado.getNombre());
        txtApellido.setText(clienteSeleccionado.getApellido());
        txtCedula.setText(clienteSeleccionado.getCedula());
        txtMonto.setText("");
        
        metodosGenerales.LimpiarTabla(modeloClientes);//anadido despues
        metodosGenerales.borrarTxt(Arrays.asList(new JTextField[]{txtDir, txtTel1, txtTel2, txtOcup, txtRec}));//solo quiero eliminar esos , no todos.
        //esto no funciona hasta ahora.                                            //actualizacion esto borra los campo de la barrita de info del cliente.
        jTabbedPane1.setSelectedIndex(0);
        txtMonto.requestFocus();
    }
    
    public void rellenarCamposPrestamos() {
        int filaSeleccionada = tablaPrestamos.getSelectedRow();
        clienteSeleccionado = (Cliente) tablaPrestamos.getValueAt(filaSeleccionada, 3);
        Prestamo p = (Prestamo) tablaPrestamos.getValueAt(filaSeleccionada, 0);
        
        txtCodigo.setText("" + p.getIdPrestamo());
        txtNombre.setText(clienteSeleccionado.getNombre());
        txtApellido.setText(clienteSeleccionado.getApellido());
        txtCedula.setText(clienteSeleccionado.getCedula());
        txtMonto.setText(p.getMontoFormateado());
        fechaInicial.setDate(p.getFechaInicial());
        
        GenerarCuotasParaLaTablita(p);
        
        metodosGenerales.LimpiarTabla(modeloPrestamos);//anadido despues
        habilitarCampos(false);
        
        if (jTabbedPane1.getTabCount() > 2) {
            jTabbedPane1.remove(2);
        }
        jTabbedPane1.setSelectedIndex(0);
        
        p = null;
        
    }
    
    private void eventoAlSeleccionarUnEmpleado() {
        tablaClientes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && tablaClientes.getSelectedRow() >= 0) {
                    int filaSeleccionada = tablaClientes.getSelectedRow();
                    clienteSeleccionado = (Cliente) tablaClientes.getValueAt(filaSeleccionada, 1);
                    txtDir.setText(clienteSeleccionado.getDireccion());
                    txtTel1.setText(clienteSeleccionado.getTelefono1());
                    txtTel2.setText(clienteSeleccionado.getTelefono2());
                    txtOcup.setText(clienteSeleccionado.getOcupacion());
                    txtRec.setText(clienteSeleccionado.getRecomendado());
                }
            }
        });
    }
    
    public void GenerarCuotasParaLaTablita(Prestamo prestamo) {
        List<Recibo> listaRecibos = Bd.buscarRecibos(prestamo.getIdPrestamo());
        int tamanoDeLista = listaRecibos.size();
        modeloCuotas.setRowCount(tamanoDeLista);
        int resultado = -2;
        
        for (int i = 0; i < tamanoDeLista; i++) {
            Recibo r = listaRecibos.get(i);
            tablaCuotas.setValueAt(r.getFechaFormateada(), i, 0);
            tablaCuotas.setValueAt(r, i, 1);
            tablaCuotas.setValueAt(r.getCuotaFormateada(), i, 2);
            tablaCuotas.setValueAt(r.estaEnAdelanto(), i, 3);
        }
        //esta parte de codigo abajo sirve para generar el index dicha variable se utilizs
        //en un porcion de codigo dentro de la tabla de cuotas.

        for (int i = 0; i < tamanoDeLista; i++) {
            Recibo r = listaRecibos.get(i);
            resultado = r.getFecha().compareTo(metodosGenerales.fechaSinHora(new Date()));
            
            switch (resultado) {
                case 0:
                    //System.out.println("Las Fechas Son IGUALES");
                    numeroDeUltimaSemanaQueSeCobro = i - 1;
                    return;
                case 1:
                    //System.out.println("La fecha De mi recibo es MAYOR que la actual");
                    numeroDeUltimaSemanaQueSeCobro = i - 1;
                    return;
                case -1:
                    // System.out.println("La fech de mi recibo es MENOR que la actual");
                    numeroDeUltimaSemanaQueSeCobro = i;
                    break;
            }
        }
    }
    
    private void configuracionDateChoosers(Date fecha) {
        fechaInicial.setDate(fecha);
        Calendar c = Calendar.getInstance();
        
        c.setTime(fecha);
        c.set(Calendar.DAY_OF_MONTH, 1);
        
        fecha1.setDate(c.getTime());
        
        c.add(Calendar.MONTH, 1);
        
        fecha2.setDate(c.getTime());
        
        JTextFieldDateEditor f = (JTextFieldDateEditor) fechaInicial.getDateEditor();
        f.setFocusable(false);
        //fechaInicial.getCalendarButton().setEnabled(false);

        //fechaInicial.getJCalendar().setPreferredSize(new Dimension(500 , 500));
        //Lo desabilite para dejarlo por defautl
        //fechaInicial.getJCalendar().getMonthChooser().getComboBox().setPreferredSize(new Dimension(150,50));
        //fechaInicial.getJCalendar().getYearChooser().setPreferredSize(new Dimension(50,50));
        //fechaInicial.setFont(new java.awt.Font("Century Gothic", 0, 16));
        //fechaInicial.setLocale(new Locale("ES"));
    }
    
    private void seleccionarLosAdelantosConTxt(JTextField txt) {
        
        if (!txt.getText().equals("")) {
            
            int hastaQueCuota = Integer.parseInt(txt.getText());
            int numeroDeCuotas = tablaCuotas.getRowCount();
            
            if (hastaQueCuota <= numeroDeCuotas && hastaQueCuota >= 0) {

                //Pongo todos los valores falsos para luego aplicar donde quiero
                for (int i = numeroDeUltimaSemanaQueSeCobro + 1; i < numeroDeCuotas; i++) {
                    tablaCuotas.setValueAt(false, i, 3);
                }

                //Pongo los valores verdaderos que quiero hasta donde quiero
                for (int i = numeroDeUltimaSemanaQueSeCobro + 1; i < hastaQueCuota; i++) {
                    tablaCuotas.setValueAt(true, i, 3);
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "Ehmm amigo tu numero debes estar entre 0 y " + numeroDeCuotas);
            }
            
        }
        
    }
    
    private void aplicarAdelantos() {
        
        if (!txtAdelantos.getText().isEmpty()) {
            seleccionarLosAdelantosConTxt(txtAdelantos);
        }
        
        int opcion = JOptionPane.showConfirmDialog(this, "Estas seguro de aplicar este adelanto ?", "Aviso", JOptionPane.YES_NO_OPTION);
        
        if (opcion == 0) {
            
            List indicesQueSeModificaran = new ArrayList();
            List numeroDeCuotasQueEstaranEnAdelantos = new ArrayList();
            int numeroDeCuotas = tablaCuotas.getRowCount();
            int indiceDePrestamo = ((Recibo) tablaCuotas.getValueAt(0, 1)).getIdPrestamo();
            
            for (int i = 0; i < numeroDeCuotas; i++) {
                
                if (((boolean) tablaCuotas.getValueAt(i, 3)) == true) {
                    
                    indicesQueSeModificaran.add(((Recibo) tablaCuotas.getValueAt(i, 1)).getIdRecibo());
                    numeroDeCuotasQueEstaranEnAdelantos.add(((Recibo) tablaCuotas.getValueAt(i, 1)).getNumeroCuota());
                    
                }
                
            }
            
            System.out.println("Indices que se modificaran " + indicesQueSeModificaran);
            
            Bd.ponerRecibosEnAdelantos(indiceDePrestamo, indicesQueSeModificaran);
            JOptionPane.showMessageDialog(this, "Estos recibos estaran en adelantos : \n " + numeroDeCuotasQueEstaranEnAdelantos);
            funcionalidadDeBotonNuevo();
        }
    }
    
}
